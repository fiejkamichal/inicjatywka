CREATE TABLE IF NOT EXISTS ActionStackEntryEntity (
    position INTEGER PRIMARY KEY NOT NULL,
    actionType INTEGER NOT NULL,
    actionId INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS ActionStackPositionEntity (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    actionStackEntryPosition INTEGER
);

CREATE TABLE IF NOT EXISTS PhaseChangeActionEntity (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    fromPhase TEXT NOT NULL,
    toPhase TEXT NOT NULL,
    type TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS CardAddActionEntity (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    cardId INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS CardDeleteActionEntity (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    cardId INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS CardUpdateActionEntity (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    cardId INTEGER NOT NULL,
    prevCardId INTEGER NOT NULL
);


getActionStackEntry:
SELECT * FROM ActionStackEntryEntity WHERE position = :position;

setActionStackEntry:
INSERT OR REPLACE INTO ActionStackEntryEntity VALUES (:position, :actionType, :actionId);

deleteActionStackEntry:
DELETE FROM ActionStackEntryEntity WHERE position = :position;

getNumOfActionStackEntries:
SELECT COUNT(*) FROM ActionStackEntryEntity;

getActionStackEntries:
SELECT * FROM ActionStackEntryEntity ORDER BY position ASC;



getActionStackPositionEntity:
SELECT * FROM ActionStackPositionEntity WHERE id = 0;

setActionStackPositionEntity:
INSERT OR REPLACE INTO ActionStackPositionEntity VALUES (0, :value);



insertPhaseChangeAction:
INSERT OR REPLACE INTO PhaseChangeActionEntity (fromPhase, toPhase, type) VALUES (:fromPhase, :toPhase, :type);

deletePhaseChangeAction:
DELETE FROM PhaseChangeActionEntity WHERE id = :actionId;

getPhaseChangeAction:
SELECT * FROM PhaseChangeActionEntity WHERE id = :actionId;

getPhaseChangeActions:
SELECT * FROM PhaseChangeActionEntity ORDER BY id ASC;


insertCardAddAction:
INSERT OR REPLACE INTO CardAddActionEntity (cardId) VALUES (:cardId);

deleteCardAddAction:
DELETE FROM CardAddActionEntity WHERE id = :actionId;

getCardAddAction:
SELECT * FROM CardAddActionEntity WHERE id = :actionId;

getCardAddActions:
SELECT * FROM CardAddActionEntity ORDER BY id ASC;


insertCardDeleteAction:
INSERT OR REPLACE INTO CardDeleteActionEntity (cardId) VALUES (:cardId);

deleteCardDeleteAction:
DELETE FROM CardDeleteActionEntity WHERE id = :actionId;

getCardDeleteAction:
SELECT * FROM CardDeleteActionEntity WHERE id = :actionId;

getCardDeleteActions:
SELECT * FROM CardDeleteActionEntity ORDER BY id ASC;


insertCardUpdateAction:
INSERT OR REPLACE INTO CardUpdateActionEntity
(cardId, prevCardId)
VALUES (:cardId, :prevCardId);

deleteCardUpdateAction:
DELETE FROM CardUpdateActionEntity WHERE id = :actionId;

getCardUpdateAction:
SELECT * FROM CardUpdateActionEntity WHERE id = :actionId;

getCardUpdateActions:
SELECT * FROM CardUpdateActionEntity ORDER BY id ASC;


lastInsertRowId:
SELECT last_insert_rowid();